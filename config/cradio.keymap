// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Home row mods macro
//#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4

#define HRML(k1,k2,k3,k4) &ht LGUI k1  &ht LALT k2  &ht LCTRL k3  &ht LSHFT k4
#define HRMR(k1,k2,k3,k4) &ht RSHFT k1  &ht RCTRL k2  &ht RALT k3  &ht RGUI k4

//#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

#define DEF 0
#define NAV 1
#define SYM 2
#define NUM 3
#define MED 4

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;

            // keys: R U

            key-positions = <2 3>;
            bindings = <&kp ESC>;
        };

        combo_minus {
            timeout-ms = <50>;

            // keys: T Y

            key-positions = <4 5>;
            bindings = <&kp MINUS>;
        };

        combo_delete {
            timeout-ms = <50>;

            // keys: V M

            key-positions = <6 7>;
            bindings = <&kp DEL>;
        };

        combo_backspace {
            timeout-ms = <50>;

            // keys: V M

            key-positions = <26 27>;
            bindings = <&kp BSPC>;
        };

        combo_under {
            timeout-ms = <50>;

            // keys: B N

            key-positions = <24 25>;
            bindings = <&kp UNDER>;
        };

        combo_capsw {
            timeout-ms = <50>;

            // keys: E I

            key-positions = <2 7>;
            bindings = <&caps_word>;
        };
    };

    //    conditional_layers {
    //        compatible = "zmk,conditional-layers";
    //        tri_layer {
    //            if-layers = <1 2 3>;
    //            then-layer = <3>;
    //        };
    //    };

    macros {
        email: email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp T &kp R &kp S &kp H &kp O &kp P &kp P &kp I &kp N &kp G &kp AT &kp P &kp R &kp O &kp T &kp O &kp N &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "EMAIL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W       &kp E        &kp R          &kp T          &kp Y          &kp U         &kp I        &kp O       &kp P
&kp A  &ht LALT S  &ht LCTRL D  &ht LSHFT F    &kp G          &kp H          &ht RSHFT J   &ht RCTRL K  &ht RALT L  &kp SEMI
&kp Z  &kp X       &kp C        &kp V          &kp B          &kp N          &kp M         &kp COMMA    &kp DOT     &ht RGUI FSLH
                                &lt NAV SPACE  &lt MED TAB    &lt SYM ENTER  &lt NUM BSPC
            >;
        };

        // NAV

        nav_layer {
            bindings = <
&email  &trans  &trans  &trans          &trans             &kp CARET  &kp LBRC   &kp RBRC   &kp LPAR   &kp RPAR
&trans  &trans  &none   &kp LEFT_SHIFT  &trans             &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &kp DLLR
&trans  &trans  &trans  &trans          &kp PRINTSCREEN    &kp HOME   &kp PG_UP  &kp PG_DN  &kp END    &kp INS
                        &trans          &trans             &trans     &trans
            >;
        };

        // SYM

        sym_layer {
            bindings = <
&kp AMPS    &kp STAR     &kp LPAR  &kp RPAR  &kp HASH    &kp CARET  &kp TILDE  &trans  &trans  &kp PSCRN
&kp DOLLAR  &kp PERCENT  &kp LBRC  &kp RBRC  &kp FSLH    &kp BSLH   &kp UNDER  &trans  &trans  &trans
&kp EXCL    &kp AT       &kp LBKT  &kp RBKT  &kp APOS    &kp DQT    &kp PIPE   &trans  &trans  &trans
                                   &trans    &trans      &trans     &trans
            >;
        };

        // NUM

        num_layer {
            bindings = <
&kp EQUAL  &kp N7  &kp N8  &kp N9  &kp N0       &kp UNDER  &kp F9        &kp F10  &kp F11  &kp F12
&kp STAR   &kp N4  &kp N5  &kp N6  &kp PLUS     &kp COMMA  &ht RSHFT F5  &kp F6   &kp F7   &kp F8
&kp FSLH   &kp N1  &kp N2  &kp N3  &kp MINUS    &kp DOT    &kp F1        &kp F2   &kp F3   &kp F4
                           &trans  &trans       &trans     &trans
            >;
        };

        // MED

        med_layer {
            bindings = <
&none       &none         &none         &none         &bt BT_CLR_ALL    &trans      &none         &trans        &trans  &trans
&bt BT_NXT  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 5  &trans            &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &trans  &trans
&bt BT_PRV  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans            &kp C_PP    &kp C_PREV    &kp C_NEXT    &trans  &trans
                                        &trans        &trans            &trans      &trans
            >;
        };
    };
};
